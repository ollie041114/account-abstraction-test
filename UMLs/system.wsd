@startuml system
skinparam maxMessageSize 220

participant User
participant Owner

box "Local Network" #LightGray
participant "Target Smart Contract" as LocalBlockchain
end box

box "Public Network" #LightGray
participant "Batcher Smart Contract" as PublicBatcher
end box

User -> Owner : Initiate request
note left : Has private key
Owner -> User : (batchNonce, positionNonce)
User -> User : Generate (txData)
User -> User : sig_user = sign(txData, batchNonce, positionNonce)
User -> Owner : Request sig_owner


Owner -> User : sig_owner = sign(txData, batchNonce, positionNonce)
note right : Has private key
User -> Owner : sign_user
Owner -> LocalBlockchain : Send (txData, batchNonce, signature_user)
LocalBlockchain -> Owner : Update state & emit events
Owner -> User : Return result
Owner -> Owner : Save to a batch \n positionNonce++

== Asynchronously ==
box Asynchronously
Owner -> PublicBatcher : Send batch to public network (txData[], sig_user[], batchNonce)
Owner -> Owner : batchNonce++
end box

@enduml