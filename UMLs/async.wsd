@startuml async
skinparam maxMessageSize 220
skinparam SequenceGroupBodyBackgroundColor #FFFFFF90
hide footbox

participant Owner

' box "Local Network" #LightGray
' participant "Target Smart Contract" as LocalBlockchain
' end box


box "Public Network" #LightGreen
participant "Relayer Smart Contract" as PublicRelayer
participant "Target Smart Contract" as PublicTarget
end box


== Asynchronously ==
box Asynchronously

Owner -> PublicRelayer : Send batch to public network \n\nrelayTransactions (txData[], sigUser[], batchNonce)

loop i = 0; i <= n times
  PublicRelayer -> PublicRelayer: positionNonce = i
  PublicRelayer -> PublicRelayer: user_address = verify sigUser over (txData[i], batchNonce, positionNonce)

  PublicRelayer -> PublicTarget : Relay txData \n+ user_address

  PublicTarget -> PublicTarget : _msgSender() = user_address
  PublicTarget --> PublicTarget : Execute transactions, update state
  PublicTarget --> PublicRelayer : Return true
end

PublicRelayer -> PublicRelayer: Save the hash over the executed transactions \n hashes[batchNonce] = hash(txData[])
PublicRelayer -> Owner: emit the event
Owner -> Owner : batchNonce++
end box

@enduml